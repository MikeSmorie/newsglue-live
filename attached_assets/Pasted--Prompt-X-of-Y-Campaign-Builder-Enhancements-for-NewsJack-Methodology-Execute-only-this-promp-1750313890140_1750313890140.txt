// Prompt X of Y – Campaign Builder Enhancements for NewsJack Methodology
// Execute only this prompt and don’t try to interpret or anticipate what comes next.
// This updates Module 1 (1 Campaign Builder) with NewsJack-driven labels, tooltips, emotional fields, and dynamic guidance.

import React from 'react';
import { useForm } from 'react-hook-form';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Label } from '@/components/ui/label';
import { HelpCircle } from 'lucide-react';
import { Tooltip, TooltipTrigger, TooltipContent } from '@/components/ui/tooltip';
import { useMutation, useQueryClient } from '@tanstack/react-query';
import { apiRequest } from '../lib/queryClient';
import { useToast } from '@/hooks/use-toast';

export default function CampaignForm() {
  const { register, handleSubmit, reset } = useForm();
  const { toast } = useToast();
  const queryClient = useQueryClient();

  const mutation = useMutation({
    mutationFn: async (data) => {
      const res = await apiRequest('POST', '/api/campaigns', data);
      return res.json();
    },
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['campaigns'] });
      toast({ title: 'Campaign Created', description: 'Your campaign has been saved.' });
      reset();
    },
    onError: () => {
      toast({ title: 'Error', description: 'Failed to save campaign.', variant: 'destructive' });
    },
  });

  return (
    <form onSubmit={handleSubmit((data) => mutation.mutate(data))} className="space-y-4">
      <div>
        <Label htmlFor="name">
          Campaign Name
          <Tooltip>
            <TooltipTrigger>
              <HelpCircle className="inline h-4 w-4 ml-1 text-muted-foreground" />
            </TooltipTrigger>
            <TooltipContent>
              The internal name for this campaign. Choose something short and recognizable.
            </TooltipContent>
          </Tooltip>
        </Label>
        <Input id="name" {...register('name')} required />
      </div>

      <div>
        <Label htmlFor="url">
          Website URL
          <Tooltip>
            <TooltipTrigger>
              <HelpCircle className="inline h-4 w-4 ml-1 text-muted-foreground" />
            </TooltipTrigger>
            <TooltipContent>
              Paste the company’s homepage or About page. We'll scrape it for key context.
            </TooltipContent>
          </Tooltip>
        </Label>
        <Input id="url" {...register('website_url')} required />
      </div>

      <div>
        <Label htmlFor="cta_url">
          CTA URL
          <Tooltip>
            <TooltipTrigger>
              <HelpCircle className="inline h-4 w-4 ml-1 text-muted-foreground" />
            </TooltipTrigger>
            <TooltipContent>
              Where should news-driven traffic be sent? Paste a product or landing page URL.
            </TooltipContent>
          </Tooltip>
        </Label>
        <Input id="cta_url" {...register('cta_url')} />
      </div>

      <div>
        <Label htmlFor="emotionalObjective">
          Emotional Campaign Objective
          <Tooltip>
            <TooltipTrigger>
              <HelpCircle className="inline h-4 w-4 ml-1 text-muted-foreground" />
            </TooltipTrigger>
            <TooltipContent>
              What emotional response should the audience feel? E.g. urgency, hope, outrage, safety, belonging.
            </TooltipContent>
          </Tooltip>
        </Label>
        <Input id="emotionalObjective" {...register('emotional_objective')} />
      </div>

      <div>
        <Label htmlFor="painPoint">
          Pain-Focused Audience Description
          <Tooltip>
            <TooltipTrigger>
              <HelpCircle className="inline h-4 w-4 ml-1 text-muted-foreground" />
            </TooltipTrigger>
            <TooltipContent>
              Describe your audience's current pain, fear, frustration, or unmet need.
            </TooltipContent>
          </Tooltip>
        </Label>
        <Textarea id="painPoint" {...register('audience_pain')} />
      </div>

      <div>
        <Label htmlFor="additionalData">
          Additional Data
          <Tooltip>
            <TooltipTrigger>
              <HelpCircle className="inline h-4 w-4 ml-1 text-muted-foreground" />
            </TooltipTrigger>
            <TooltipContent>
              Any extra context (mission, competitors, tone, etc) useful for tailoring your campaign.
            </TooltipContent>
          </Tooltip>
        </Label>
        <Textarea id="additionalData" {...register('additional_data')} />
      </div>

      <Button type="submit" className="w-full">
        Save Campaign
      </Button>
    </form>
  );
}